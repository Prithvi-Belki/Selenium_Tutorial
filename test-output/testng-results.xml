<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="2" failed="2" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-07T19:39:36 IST" name="Suite" finished-at="2024-10-07T19:40:15 IST" duration-ms="39069">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidatoin()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" name="LoginErrorValidatoin" class="framework.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.SubmitOrder(java.util.HashMap)[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" name="SubmitOrder" class="framework.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-10-07T19:39:36 IST" name="Error Validation Test" finished-at="2024-10-07T19:40:04 IST" duration-ms="28572">
      <class name="framework.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:36 IST" name="launchApplication" finished-at="2024-10-07T19:39:41 IST" duration-ms="5304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidatoin()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:41 IST" name="LoginErrorValidatoin" finished-at="2024-10-07T19:39:42 IST" duration-ms="947" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at framework.Tests.ErrorValidationsTest.LoginErrorValidatoin(ErrorValidationsTest.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidatoin -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:42 IST" name="closeBrowser" finished-at="2024-10-07T19:39:42 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:42 IST" name="launchApplication" finished-at="2024-10-07T19:39:45 IST" duration-ms="2309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidatoin()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:45 IST" name="LoginErrorValidatoin" finished-at="2024-10-07T19:39:45 IST" duration-ms="801" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at framework.Tests.ErrorValidationsTest.LoginErrorValidatoin(ErrorValidationsTest.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidatoin -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:46 IST" name="closeBrowser" finished-at="2024-10-07T19:39:46 IST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:46 IST" name="launchApplication" finished-at="2024-10-07T19:39:49 IST" duration-ms="3139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:39:49 IST" name="ProductErrorValidation" finished-at="2024-10-07T19:40:04 IST" duration-ms="14409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:framework.Tests.ErrorValidationsTest@55dfcc6]" started-at="2024-10-07T19:40:04 IST" name="closeBrowser" finished-at="2024-10-07T19:40:04 IST" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- framework.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2024-10-07T19:39:36 IST" name="Submit Order Test" finished-at="2024-10-07T19:40:15 IST" duration-ms="39069">
      <class name="framework.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:39:36 IST" name="launchApplication" finished-at="2024-10-07T19:39:40 IST" duration-ms="3910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:39:40 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-10-07T19:39:57 IST" duration-ms="16856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=FEFWwws!@#2334, email=Hirokami@gamil.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:39:57 IST" name="closeBrowser" finished-at="2024-10-07T19:39:57 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:39:57 IST" name="launchApplication" finished-at="2024-10-07T19:40:00 IST" duration-ms="2507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:40:00 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-10-07T19:40:14 IST" duration-ms="14515" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=FEFmhcws!@#20134, email=fdgbtgder@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at framework.Tests.SubmitOrderTest.SubmitOrder(SubmitOrderTest.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:40:14 IST" name="closeBrowser" finished-at="2024-10-07T19:40:15 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:framework.Tests.SubmitOrderTest@3a5ecce3]" started-at="2024-10-07T19:40:15 IST" name="OrderHistoryTest" finished-at="2024-10-07T19:40:15 IST" depends-on-methods="framework.Tests.SubmitOrderTest.SubmitOrder" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method framework.Tests.SubmitOrderTest.OrderHistoryTest() on instance framework.Tests.SubmitOrderTest@3a5ecce3 depends on not successfully finished methods 
[framework.Tests.SubmitOrderTest.SubmitOrder() on instance framework.Tests.SubmitOrderTest@3a5ecce3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method framework.Tests.SubmitOrderTest.OrderHistoryTest() on instance framework.Tests.SubmitOrderTest@3a5ecce3 depends on not successfully finished methods 
[framework.Tests.SubmitOrderTest.SubmitOrder() on instance framework.Tests.SubmitOrderTest@3a5ecce3]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
      </class> <!-- framework.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
